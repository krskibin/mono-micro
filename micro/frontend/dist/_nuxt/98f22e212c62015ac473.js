(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{337:function(t,e,o){"use strict";o.r(e);o(24);var r=o(2),n={fetch:function(){var t=this;return Object(r.a)(regeneratorRuntime.mark((function e(){var o;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,t.$http.$get("tasks-api/tasks/".concat(t.$route.params.id));case 2:(o=e.sent).success&&(t.task=o.task,t.todoForm={body:t.task.body,header:t.task.header,isDone:t.task.isDone});case 4:case"end":return e.stop()}}),e)})))()},data:function(){return{task:{},todoForm:{body:"",header:"",isDone:!1},rules:{header:[{required:!0,message:"Please input task header",trigger:"blur"},{min:3,max:5,message:"Length should be 3 to 5",trigger:"blur"}]}}},methods:{submitForm:function(t){var e=this;this.$refs[t].validate((function(t){if(!t)return!1;e.$http.put("/tasks-api/tasks/".concat(e.$route.params.id),e.todoForm),e.$notify({title:"Success",message:"Task updated",type:"success"})}))},resetForm:function(t){this.$refs[t].resetFields()},deleteTask:function(){this.$http.delete("/tasks-api/tasks/".concat(this.$route.params.id)),this.$notify({title:"Success",message:"Task updated",type:"success"}),this.$router.push("/tasks")}},middleware:"authenticated"},d=o(43),component=Object(d.a)(n,(function(){var t=this,e=t.$createElement,o=t._self._c||e;return t.$fetchState.pending?o("div",[t._v("\n  Fetching post #"+t._s(t.$route.params.id)+"...\n")]):o("div",[o("el-form",{ref:"todoForm",staticClass:"demo-todoForm",attrs:{model:t.todoForm,rules:t.rules,"label-width":"60px"}},[o("h3",{staticStyle:{"margin-bottom":"1rem","margin-top":"2rem"}},[t._v("\n      Create new task\n    ")]),t._v(" "),o("el-form-item",{attrs:{label:"Name",prop:"name"}},[o("el-input",{model:{value:t.todoForm.header,callback:function(e){t.$set(t.todoForm,"header",e)},expression:"todoForm.header"}})],1),t._v(" "),o("el-form-item",{attrs:{label:"Body",prop:"desc"}},[o("el-input",{attrs:{type:"textarea"},model:{value:t.todoForm.body,callback:function(e){t.$set(t.todoForm,"body",e)},expression:"todoForm.body"}})],1),t._v(" "),o("el-checkbox",{model:{value:t.todoForm.isDone,callback:function(e){t.$set(t.todoForm,"isDone",e)},expression:"todoForm.isDone"}},[t._v("\n      is done?\n    ")]),t._v(" "),o("el-form-item",[o("el-button",{attrs:{type:"primary"},on:{click:function(e){return t.submitForm("todoForm")}}},[t._v("\n        Update\n      ")]),t._v(" "),o("el-button",{on:{click:function(e){return t.resetForm("todoForm")}}},[t._v("\n        Reset\n      ")])],1)],1),t._v(" "),o("p",[o("n-link",{attrs:{to:"/tasks"}},[t._v("\n      Back to posts\n    ")]),t._v("\n    or   "),o("el-button",{attrs:{type:"danger"},on:{click:t.deleteTask}},[t._v("\n      Delete\n    ")])],1)],1)}),[],!1,null,null,null);e.default=component.exports}}]);